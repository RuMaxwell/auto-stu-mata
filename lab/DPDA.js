// 本示例 DPDA 接受任意 n 个 0 接任意 n 个 1 的串 (n >= 0)
const DPDA = {
  // 状态集
  'Q': [0, 1, 2],
  // 输入符号集
  'S': [0, 1],
  // 堆栈字母集
  'G': [0, 1, -1],
  // 转移函数（Qx(S∪{ε})xG -> QxG*）的表
  'D': {
    '0 0 -1': [0, [0, -1]],
    '0 1 -1': [0, [1, -1]],
    '0 0 0': [0, [0, 0]],
    '0 0 1': [0, [0, 1]],
    '0 1 0': [0, [1, 0]],
    '0 1 1': [0, [1, 1]],
    '0 null -1': [1, [0]],
    '0 null 0': [1, [0]],
    '0 null 1': [1, [1]]
  },
  // 初始状态
  'q0': null,
  // 初始栈符号
  'Z0': null,
  // 接受状态集
  'F': []
};

// DPDA 的一个状态表示
var DPDA_state = {
  // 当前状态
  q: null,
  // 剩余输入串
  w: [],
  // 栈内容
  g: []
};

const DPDA_transd = function (q, a, x) {
  //
};

const DPDA_accept = function (dpda, w) {
};